name: Test Deploy

on: [push, pull_request]

jobs:
  test-deploy:
    name: Test Deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Shellcheck
      uses: bewuethr/shellcheck-action@v2

    - name: Control Character Check
      run: ./.github/workflows/control_character_finder.sh

    - name: Generate variables
      id: variables
      run: ./.github/workflows/variables.sh ${{ github.sha }} ${{ github.ref }}

    - name: Build Docker Image
      env:
        TAG: ${{ steps.variables.outputs.sha8 }}
        DATE: ${{ steps.variables.outputs.date }}
      run: |
        docker build \
          . \
          --file ./.docker/Dockerfile \
          --tag swedbankpay/jekyll-plantuml:${TAG}

    - name: Run Docker Image (default command)
      env:
        TAG: ${{ steps.variables.outputs.sha8 }}
        JEKYLL_DIR: ${{ github.workspace }}/.docker/jekyll-plantuml
      run: ./.github/workflows/docker_run_test.sh serve

    - name: Run Docker Image (jekyll build, no Gemfile)
      env:
        TAG: ${{ steps.variables.outputs.sha8 }}
        JEKYLL_DIR: ${{ github.workspace }}
        TEST: false
      run: ./.github/workflows/docker_run_test.sh build

    - name: Run Docker Image (jekyll build)
      env:
        TAG: ${{ steps.variables.outputs.sha8 }}
        JEKYLL_DIR: ${{ github.workspace }}/.docker/jekyll-plantuml
        TEST: false
      run: ./.github/workflows/docker_run_test.sh build

    - name: Generate Branch Name
      id: branch
      run: |
        BRANCH_NAME="r${{ github.run_id }}-${{ github.run_number }}"
        echo "BRANCH_NAME: ${BRANCH_NAME}"
        echo "::set-output name=name::${BRANCH_NAME}"

    - name: Test Deploy
      env:
        SHA8: ${{ steps.variables.outputs.sha8 }}
        WORK_DIR: ${{ github.workspace }}
        GIT_DEPLOY_DIR: _site
        GIT_DEPLOY_BRANCH: ${{ steps.branch.outputs.name }}
        GIT_DEPLOY_REPO: https://${{ secrets.GH_PAGES_TOKEN }}@github.com/${{ github.repository }}.git
      run: |
        docker run \
          --volume ${WORK_DIR}/.docker/jekyll-plantuml:/srv/jekyll \
          --env GIT_DEPLOY_DIR="${GIT_DEPLOY_DIR}" \
          --env GIT_DEPLOY_BRANCH="${GIT_DEPLOY_BRANCH}" \
          --env GIT_DEPLOY_REPO="${GIT_DEPLOY_REPO}" \
          --env DEBUG="true" \
          swedbankpay/jekyll-plantuml:${SHA8} \
          deploy

    - name: Cleanup
      if: always()
      env:
        GIT_DEPLOY_BRANCH: ${{ steps.branch.outputs.name }}
      run: |
          git checkout --force ${{ github.sha }}
          if git show-ref --verify --quiet "refs/heads/${GIT_DEPLOY_BRANCH}"; then
              echo "Branch '${GIT_DEPLOY_BRANCH}' found. Deleting"
              git branch --delete --force "${GIT_DEPLOY_BRANCH}"
              git push --delete origin "${GIT_DEPLOY_BRANCH}"
          fi
