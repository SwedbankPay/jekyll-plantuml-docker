#!/bin/bash

if [ "true" = "$DEBUG" ]; then
    env                      # ...showing the environment
    cat "$GITHUB_EVENT_PATH" # ...and the GitHub webhook payload
    set -x                   # ...and script execution.
fi

# Any errors should cause an immediate exit and failure.
set -e

# Set input variables
readonly gh_api_token="$GITHUB_TOKEN"
readonly commiter_email="$GITHUB_ACTOR_EMAIL"
readonly committer_name="$GITHUB_ACTOR"
readonly publishing_branch="$GH_PAGES_BRANCH"
readonly jekyll_env="$JEKYLL_ENV"
readonly github_repository="${GITHUB_REPO}"

# Build project
echo "Jekyll build:${jekyll_env}"
bundle check
bundle exec jekyll build JEKYLL_ENV=$jekyll_env --verbose || exit $?

branch_name="$(git rev-parse --abbrev-ref HEAD)"

if [ "$branch_name" = "master" ]; then
    # Set up Git for commit and push
    if [ "true" != "$DEBUG" ]; then
        git config user.email "${commiter_email}" || exit $?
        git config user.name "${committer_name}" || exit $?
        git config remote.origin.url "https://x-access-token:${gh_api_token}@github.com/${github_repository}.git" || exit $?
    fi

    cd _site
    git add -a
    git commit -m "Autodeployed"
    branch_name="$(git rev-parse --abbrev-ref HEAD)"
    echo "Pushing to $publishing_branch"
    git push --force origin "$publishing_branch" || exit $?
else
    echo "Branch '$branch_name' is not 'master', so nothing to do."
fi

echo "Done!"